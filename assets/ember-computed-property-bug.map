{"version":3,"sources":["vendor/ember-cli/app-prefix.js","ember-computed-property-bug/app.js","ember-computed-property-bug/components/app-version.js","ember-computed-property-bug/controllers/application.js","ember-computed-property-bug/controllers/array.js","ember-computed-property-bug/controllers/object.js","ember-computed-property-bug/initializers/app-version.js","ember-computed-property-bug/initializers/export-application-global.js","ember-computed-property-bug/models/basket.js","ember-computed-property-bug/models/fruit.js","ember-computed-property-bug/router.js","ember-computed-property-bug/routes/application.js","ember-computed-property-bug/templates/application.js","ember-computed-property-bug/tests/app.jshint.js","ember-computed-property-bug/tests/controllers/application.jshint.js","ember-computed-property-bug/tests/helpers/resolver.js","ember-computed-property-bug/tests/helpers/resolver.jshint.js","ember-computed-property-bug/tests/helpers/start-app.js","ember-computed-property-bug/tests/helpers/start-app.jshint.js","ember-computed-property-bug/tests/models/basket.jshint.js","ember-computed-property-bug/tests/models/fruit.jshint.js","ember-computed-property-bug/tests/router.jshint.js","ember-computed-property-bug/tests/routes/application.jshint.js","ember-computed-property-bug/tests/test-helper.js","ember-computed-property-bug/tests/test-helper.jshint.js","ember-computed-property-bug/tests/unit/controllers/application-test.js","ember-computed-property-bug/tests/unit/controllers/application-test.jshint.js","ember-computed-property-bug/tests/unit/models/basket-test.js","ember-computed-property-bug/tests/unit/models/basket-test.jshint.js","ember-computed-property-bug/tests/unit/routes/application-test.js","ember-computed-property-bug/tests/unit/routes/application-test.jshint.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('ember-computed-property-bug/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'ember-computed-property-bug/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  var App;\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('ember-computed-property-bug/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'ember-computed-property-bug/config/environment'], function (exports, AppVersionComponent, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = AppVersionComponent['default'].extend({\n    version: version,\n    name: name\n  });\n\n});","define('ember-computed-property-bug/controllers/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    basket: null,\n\n    emberVersion: Ember['default'].computed({\n      get: function get() {\n        return Ember['default'].VERSION;\n      }\n    }),\n\n    hasBug: Ember['default'].computed('emberVersion', {\n      get: function get() {\n        return this.get('emberVersion') === '2.1.0';\n      }\n    }),\n\n    actions: {\n      refresh: function refresh() {\n        this.get('basket').notifyPropertyChange('fruits.length');\n      }\n    }\n  });\n\n});","define('ember-computed-property-bug/controllers/array', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('ember-computed-property-bug/controllers/object', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('ember-computed-property-bug/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'ember-computed-property-bug/config/environment'], function (exports, initializerFactory, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: initializerFactory['default'](name, version)\n  };\n\n});","define('ember-computed-property-bug/initializers/export-application-global', ['exports', 'ember', 'ember-computed-property-bug/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (config['default'].exportApplicationGlobal !== false) {\n      var value = config['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember['default'].String.classify(config['default'].modulePrefix);\n      }\n\n      if (!window[globalName]) {\n        window[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete window[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('ember-computed-property-bug/models/basket', ['exports', 'ember-data', 'ember'], function (exports, DS, Ember) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    fruits: DS['default'].hasMany('fruit'),\n    fruitList: Ember['default'].computed('fruits.length', 'fruits.@each.name', {\n      get: function get() {\n        return this.get('fruits').map(function (fruit) {\n          return fruit.get('name');\n        }).join(', ');\n      }\n    })\n  });\n\n});","define('ember-computed-property-bug/models/fruit', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    basket: DS['default'].belongsTo('basket'),\n    name: DS['default'].attr('string')\n  });\n\n});","define('ember-computed-property-bug/router', ['exports', 'ember', 'ember-computed-property-bug/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {});\n\n  exports['default'] = Router;\n\n});","define('ember-computed-property-bug/routes/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var FRUITS = ['apple', 'orange', 'banana', 'grape', 'watermelon'];\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return this.store.createRecord('basket', {\n        fruits: []\n      });\n    },\n\n    setupController: function setupController(ctrl, model) {\n      ctrl.set('basket', model);\n    },\n\n    afterModel: function afterModel(model) {\n      var _this = this;\n\n      var fruits = model.get('fruits'),\n          fruitObj = undefined;\n\n      FRUITS.forEach(function (fruit) {\n        fruitObj = _this.store.createRecord('fruit', {\n          name: fruit\n        });\n        fruits.pushObject(fruitObj);\n      });\n\n      Ember['default'].run.later(function () {\n        //setting the last object name\n        fruits.get('firstObject').set('name', 'grapefruit');\n        fruitObj.set('name', 'kiwi');\n      }, 300);\n    }\n  });\n\n});","define('ember-computed-property-bug/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"topLevel\": null,\n          \"revision\": \"Ember@2.1.0\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 4,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 6,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"ember-computed-property-bug/templates/application.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          var el2 = dom.createTextNode(\"See the bug? Hit Refresh\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element0 = dom.childAt(fragment, [1]);\n          var morphs = new Array(1);\n          morphs[0] = dom.createElementMorph(element0);\n          return morphs;\n        },\n        statements: [\n          [\"element\",\"action\",[\"refresh\"],[],[\"loc\",[null,[5,10],[5,30]]]]\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"topLevel\": false,\n        \"revision\": \"Ember@2.1.0\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 6,\n            \"column\": 7\n          }\n        },\n        \"moduleName\": \"ember-computed-property-bug/templates/application.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        dom.setAttribute(el1,\"id\",\"title\");\n        var el2 = dom.createTextNode(\"Fruits (Ember VERSION \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\")\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(3);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);\n        morphs[2] = dom.createMorphAt(fragment,4,4,contextualElement);\n        dom.insertBoundary(fragment, null);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"emberVersion\",[\"loc\",[null,[1,37],[1,53]]]],\n        [\"content\",\"basket.fruitList\",[\"loc\",[null,[2,1],[2,21]]]],\n        [\"block\",\"if\",[[\"get\",\"hasBug\",[\"loc\",[null,[4,6],[4,12]]]]],[],0,null,[\"loc\",[null,[4,0],[6,7]]]]\n      ],\n      locals: [],\n      templates: [child0]\n    };\n  }()));\n\n});","define('ember-computed-property-bug/tests/app.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('app.js should pass jshint', function(assert) { \n    assert.ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('ember-computed-property-bug/tests/controllers/application.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/application.js should pass jshint', function(assert) { \n    assert.ok(true, 'controllers/application.js should pass jshint.'); \n  });\n\n});","define('ember-computed-property-bug/tests/helpers/resolver', ['exports', 'ember/resolver', 'ember-computed-property-bug/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('ember-computed-property-bug/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/resolver.js should pass jshint', function(assert) { \n    assert.ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('ember-computed-property-bug/tests/helpers/start-app', ['exports', 'ember', 'ember-computed-property-bug/app', 'ember-computed-property-bug/config/environment'], function (exports, Ember, Application, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('ember-computed-property-bug/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/start-app.js should pass jshint', function(assert) { \n    assert.ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('ember-computed-property-bug/tests/models/basket.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/basket.js should pass jshint', function(assert) { \n    assert.ok(true, 'models/basket.js should pass jshint.'); \n  });\n\n});","define('ember-computed-property-bug/tests/models/fruit.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/fruit.js should pass jshint', function(assert) { \n    assert.ok(true, 'models/fruit.js should pass jshint.'); \n  });\n\n});","define('ember-computed-property-bug/tests/router.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('router.js should pass jshint', function(assert) { \n    assert.ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('ember-computed-property-bug/tests/routes/application.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/application.js should pass jshint', function(assert) { \n    assert.ok(true, 'routes/application.js should pass jshint.'); \n  });\n\n});","define('ember-computed-property-bug/tests/test-helper', ['ember-computed-property-bug/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('ember-computed-property-bug/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('test-helper.js should pass jshint', function(assert) { \n    assert.ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('ember-computed-property-bug/tests/unit/controllers/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('ember-computed-property-bug/tests/unit/controllers/application-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers');\n  QUnit.test('unit/controllers/application-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/controllers/application-test.js should pass jshint.'); \n  });\n\n});","define('ember-computed-property-bug/tests/unit/models/basket-test', ['ember-qunit', 'ember'], function (ember_qunit, Ember) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('basket', 'Unit | Model | basket', {\n    // Specify the other units that are required for this test.\n    needs: ['model:fruit']\n  });\n\n  ember_qunit.test('it returns list', function (assert) {\n    var store = this.store();\n    var model = this.subject({\n      fruits: []\n    });\n    var fruits = model.get('fruits');\n    var fruit2 = null;\n\n    Ember['default'].run(function () {\n      fruit2 = store.createRecord('fruit', {\n        name: 'orange'\n      });\n    });\n\n    Ember['default'].run(function () {\n      fruits.pushObject(store.createRecord('fruit', {\n        name: 'apple'\n      }));\n\n      fruits.pushObject(fruit2);\n    });\n\n    assert.equal(model.get('fruitList'), \"apple, orange\");\n\n    Ember['default'].run(function () {\n      fruit2.set('name', 'banana');\n    });\n\n    assert.equal(model.get('fruitList'), \"apple, banana\");\n  });\n\n});","define('ember-computed-property-bug/tests/unit/models/basket-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/models');\n  QUnit.test('unit/models/basket-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/models/basket-test.js should pass jshint.'); \n  });\n\n});","define('ember-computed-property-bug/tests/unit/routes/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:application', 'Unit | Route | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('ember-computed-property-bug/tests/unit/routes/application-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes');\n  QUnit.test('unit/routes/application-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/routes/application-test.js should pass jshint.'); \n  });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('ember-computed-property-bug/config/environment', ['ember'], function(Ember) {\n  var prefix = 'ember-computed-property-bug';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"ember-computed-property-bug/tests/test-helper\");\n} else {\n  require(\"ember-computed-property-bug/app\")[\"default\"].create({\"name\":\"ember-computed-property-bug\",\"version\":\"0.0.0+3dc14646\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"ember-computed-property-bug.js"}